题目链接：https://leetcode-cn.com/problems/string-to-integer-atoi/

题目描述：
    请你来实现一个 atoi 函数，使其能将字符串转换成整数。
    首先，该函数会根据需要丢弃无用的开头空格字符，直到寻找到第一个非空格的字符为止。接下来的转化规则如下：
        如果第一个非空字符为正或者负号时，则将该符号与之后面尽可能多的连续数字字符组合起来，形成一个有符号整数。
        假如第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成一个整数。
        该字符串在有效的整数部分之后也可能会存在多余的字符，那么这些字符可以被忽略，它们对函数不应该造成影响。
    注意：假如该字符串中的第一个非空格字符不是一个有效整数字符、字符串为空或字符串仅包含空白字符时，则你的函数不需要进行转换，即无法进行有效转换。
    在任何情况下，若函数不能进行有效的转换时，请返回 0 。
    提示：
        本题中的空白字符只包括空格字符 ' ' 。
        假设我们的环境只能存储 32 位大小的有符号整数，那么其数值范围为 [−2^31,  2^31 − 1]。
        如果数值超过这个范围，请返回  INT_MAX (2^31 − 1) 或 INT_MIN (−2^31) 。


解题思路：
/************************************************************************************************************************************/
    正常的atoi()没有难度，本题需要考虑以下特殊情况：
        如果在数字前出现空格，则可以被忽略；
        如果在数字前出现+-，则视为遇到数字，开始翻译；
        如果在数字中遇到任何非数字（+-、空格、小数点）等符号，算作翻译结束。
        翻译结果用32位有符号数表示，因此需要考虑溢出的问题。
    解决方案：
        设置标志位hasStarted，用于标记是否遇到数字/+-导致翻译开始，
        设置标志位isNegative，用于标记是否得到负数。因为负数与正数的绝对值限制不相等，需要分开处理。
/************************************************************************************************************************************/
//TODO：使用确定有限状态机解决问题。
